import React, { useState, forwardRef } from 'react';
import ProjectRetrospectiveModal from './ProjectRetrospectiveModal';
import poss from "../assets/images/POSS.svg"
import uggumda from "../assets/images/uggumda.svg"
import tara from "../assets/images/tara.svg"
import pf from "../assets/images/portfolio.svg"

const ProjectSection = forwardRef((props, ref) => {
  const [projectFilter, setProjectFilter] = useState('all');
  const [modalOpen, setModalOpen] = useState(false);
  const [selectedProject, setSelectedProject] = useState(null);

  const projectData = [
    {
      title: "POSS - ÏÇºÏÑ±Ï†ÑÏûê ÏÉùÏÇ∞Í≥ÑÌöç ÏµúÏ†ÅÌôî ÏãúÏä§ÌÖú",
      description: "Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ï†ÑÏ†êÍ≤Ä Í∏∞Îä• Î∞è ÏïåÍ≥†Î¶¨Ï¶ò ÏàòÌñâÍ≤∞Í≥º Î∂ÑÏÑù ÌôîÎ©¥ Í∞úÎ∞ú",
      tags: ["Team","ÌåÄÏû•", "GUI","Python" ,"PyQt5"],
      myRole: [
        "GUI ÌôîÎ©¥ Í∞úÎ∞ú (PyQt5)",
        "ÏïåÍ≥†Î¶¨Ï¶ò Í≤∞Í≥º ÏãúÍ∞ÅÌôî Í∏∞Îä• Í∞úÎ∞ú",
        "QHDÏôÄ FHD Ìï¥ÏÉÅÎèÑ Í∞Ñ UI ÏùºÍ¥ÄÏÑ±ÏùÑ ÏúÑÌï¥, Ìï¥ÏÉÅÎèÑÏóê Îî∞Îùº width, height, Ìè∞Ìä∏ ÌÅ¨Í∏∞Î•º ÏûêÎèô Ï°∞Ï†àÌïòÎäî Ïú†Ìã∏Î¶¨Ìã∞ Î©îÏÑúÎìúÎ•º Íµ¨ÌòÑ",
        "PyQt Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÎÇ¥ Ï†ÑÏó≠ ÏÉÅÌÉú Í¥ÄÎ¶¨Î•º ÏúÑÌï¥, Redux Í∞úÎÖêÏùÑ Ï∞∏Í≥†Ìïú static Î©îÏÑúÎìú Í∏∞Î∞òÏùò Ï§ëÏïô ÏßëÏ§ëÏãù ÏÉÅÌÉú Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú Íµ¨ÌòÑ",
        "ÏÇºÏÑ±Ï†ÑÏûê Îã¥ÎãπÏûêÏôÄ ÏßÅÏ†ë ÏÜåÌÜµÌïòÏó¨ ÏöîÍµ¨ÏÇ¨Ìï≠ Î∂ÑÏÑù",
        "Ïã§ÏÇ¨Ïö©ÏûêÏùò ÌîºÎìúÎ∞±ÏùÑ ÌÜµÌïú ÏãúÏä§ÌÖú Í∞úÏÑ†",
      ],
      githubUrl: "https://github.com/p990805/ssafyLastProject",
      image: poss
    },
    {
      title: "Ïö∞ÍøàÎã§ - Ïö∞Î¶¨Îì§Ïùò ÍøàÍæ∏Îäî Îã§Ïù¥Ïñ¥Î¶¨",
      description: "ÍøàÏùÑ Ï†ÅÏúºÎ©¥ AIÎ°ú ÍøàÏùÑ ÏòÅÏÉÅÌôî ÏãúÏºúÏ£ºÍ≥† Ï†ÄÏû•ÌïòÏó¨ Ïö∞Ï£ºÏùò Î≥ÑÏûêÎ¶¨Ï≤òÎüº Íæ∏ÎØ∏Îäî ÌîÑÎ°úÏ†ùÌä∏",
      tags: ["Team", "Ïõπ", "Ïù∏ÌîÑÎùº", "Ïö∞ÏàòÏÉÅ","Docker","DockerCompose","MobaXterm","Jenkins","NginX"],
      myRole: [
        "Docker Î∞è Docker Compose Í∏∞Î∞òÏúºÎ°ú MSA ÏïÑÌÇ§ÌÖçÏ≤òÏùò Î∞±ÏóîÎìú ÌîÑÎ°úÏ†ùÌä∏ Ïª®ÌÖåÏù¥ÎÑàÌôî Î∞è Î∞∞Ìè¨ ÏûêÎèôÌôî ÏÑ§Í≥Ñ",
        "JenkinsÎ•º ÌôúÏö©Ìïú CI/CD ÌååÏù¥ÌîÑÎùºÏù∏ Íµ¨Ï∂ïÏùÑ ÌÜµÌï¥ ÏΩîÎìú Î≥ÄÍ≤Ω Ïãú ÏûêÎèô ÎπåÎìú¬∑ÌÖåÏä§Ìä∏¬∑Î∞∞Ìè¨ ÌîÑÎ°úÏÑ∏Ïä§ Íµ¨ÌòÑ",
        "GitLabÍ≥º MattermostÎ•º Ïó∞ÎèôÌïòÏó¨ ÏΩîÎìú Ïù¥Î≤§Ìä∏ Î∞úÏÉù Ïãú Ïã§ÏãúÍ∞Ñ ÏïåÎ¶º Ï†ÑÏÜ° Í∏∞Îä• Í∞úÎ∞ú Î∞è Ïö¥ÏòÅ",
        "GrafanaÏôÄ PrometheusÎ•º ÌôúÏö©Ìïú Î™®ÎãàÌÑ∞ÎßÅ ÏãúÏä§ÌÖú Íµ¨Ï∂ï Î∞è ÎåÄÏãúÎ≥¥Îìú Íµ¨ÏÑ±",
        "Redux-toolkitÏùÑ Ïù¥Ïö©Ìïú Ï§ëÏïô ÏãúÏä§ÌÖú Í¥ÄÎ¶¨",
        "ÌåÄ ÌîÑÎ°úÏ†ùÌä∏ ÎÇ¥ Ï£ºÏöî Ïù∏ÌÑ∞ÎûôÏÖòÏùÑ ÏúÑÌïú CSS Í∏∞Î∞ò Ïï†ÎãàÎ©îÏù¥ÏÖò ÏÑ§Í≥Ñ Î∞è Íµ¨ÌòÑ Îã¥Îãπ",
      ],
      githubUrl: "https://github.com/p990805/ssafySpecializeProject",
      image: uggumda
    },
    {
      title: "Ìã∞ÏïÑÎùº - Ìã∞ ÏóÜÏù¥ ÎßëÍ≤å ÏûêÎùº(ÏïÑ)Îùº",
      description: "WebRTCÎ•º Ïù¥Ïö©Ìïú Ïú†Í∏∞Í≤¨ ÌõÑÏõê ÏÇ¨Ïù¥Ìä∏ ÏûÖÎãàÎã§.",
      tags: ["Team","ÌåÄÏû•","Ïõπ", "WebRTC","JavaScript","React"],
      myRole: [
        "ÏÑúÎπÑÏä§Ïùò Ï≤´Ïù∏ÏÉÅÏùÑ Ï±ÖÏûÑÏßÄÎäî Î©îÏù∏ ÌôîÎ©¥ UI/UX ÏÑ§Í≥Ñ Î∞è Íµ¨ÌòÑ",
        "WebRTC Í∏∞Î∞òÏùò Ïã§ÏãúÍ∞Ñ Ïä§Ìä∏Î¶¨Î∞ç Î∞è Ï±ÑÌåÖ Í∏∞Îä• Íµ¨ÌòÑÏùÑ ÌÜµÌï¥ ÏñëÎ∞©Ìñ• Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖò ÏÑúÎπÑÏä§ Íµ¨Ï∂ï",
        "Î∞±ÏóîÎìú APIÏôÄ Ïó∞ÎèôÌïòÏó¨ ÌöåÏõê/Í∏∞Í¥Ä Íµ¨Î∂ÑÏóê Îî∞Î•∏ Ïù∏Ï¶ù Î∞è ÌîÑÎ°úÌïÑ Í¥ÄÎ¶¨(Î°úÍ∑∏Ïù∏, ÌöåÏõêÍ∞ÄÏûÖ, Ï†ïÎ≥¥ ÏàòÏ†ï) Í∏∞Îä• Íµ¨ÌòÑ",
        "AWS S3Î•º ÌôúÏö©Ìïú Ïù¥ÎØ∏ÏßÄ Î∞è ÌååÏùº ÏóÖÎ°úÎìú Í∏∞Îä•ÏùÑ ÌîÑÎ°†Ìä∏ÏóîÎìúÏôÄ Î∞±ÏóîÎìúÏóêÏÑú Î™®Îëê Íµ¨ÌòÑÌïòÏó¨ ÏïàÏ†ïÏ†ÅÏù∏ ÎØ∏ÎîîÏñ¥ Í¥ÄÎ¶¨ ÏãúÏä§ÌÖú Íµ¨Ï∂ï"
      ],
      githubUrl: "https://github.com/p990805/ssafyCommonProject",
      image: tara
    },
    {
      title: "ÏßúÏä§ Ïª§Ìîº",
      description: "SSAFYÏóêÏÑú ÌòÑÏû¨ Ï†úÍ≥µÌïòÎäî Ïª§Ìîº Ï£ºÎ¨∏ ÏõπÏÇ¨Ïù¥Ìä∏Î•º Í∞úÎüâÌïòÏó¨ ÎßåÎì† ÌîÑÎ°úÏ†ùÌä∏ ÏûÖÎãàÎã§.",
      tags: ["Team","Ïõπ","Java","JWT","Spring Boot"],
      myRole: [
        "JWTÎ•º Ïù¥Ïö©Ìïú Î°úÍ∑∏Ïù∏,Î°úÍ∑∏ÏïÑÏõÉ Í∏∞Îä• Íµ¨ÌòÑ",
        "ÌöåÏõêÏ†ïÎ≥¥ CRUD Î°úÏßÅ Íµ¨ÌòÑ",
      ],
      githubUrl: "https://github.com/JaS-JavaStudy/jascoffee",
      image: "https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?w=400&h=200&fit=crop"
    },
    {
      title: "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏÇ¨Ïù¥Ìä∏",
      description: "Ï†ÄÎßåÏùò Ìè¨Ìä∏Ìè¥Î¶¨Ïò§Î•º ÎßåÎì§Í∏∞ ÏúÑÌï¥ Ï†úÏûëÌñàÏäµÎãàÎã§.",
      tags: ["Personal", "Î∞òÏùëÌòï", "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§", "ÏÇ¨Ïù¥Îìú"],
      myRole: [
        "React Í∏∞Î∞ò SPA Í∞úÎ∞ú",
        "Î∞òÏùëÌòï ÎîîÏûêÏù∏ Íµ¨ÌòÑ",
        "EmailJSÎ•º ÌôúÏö©Ìïú Ïó∞ÎùΩÏ≤ò Ìèº Íµ¨ÌòÑ",
        "Ïï†ÎãàÎ©îÏù¥ÏÖò Î∞è Ïù∏ÌÑ∞ÎûôÏÖò Ìö®Í≥º Í∞úÎ∞ú"
      ],
      githubUrl: "https://github.com/p990805/Portfolio",
      image: pf
    },
  ];

  // ÌïÑÌÑ∞ÎßÅÎêú ÌîÑÎ°úÏ†ùÌä∏ Îç∞Ïù¥ÌÑ∞
  const filteredProjects = projectData.filter(project => {
    if (projectFilter === 'all') return true;
    if (projectFilter === 'team') return project.tags.includes('Team');
    if (projectFilter === 'personal') return project.tags.includes('Personal');
    return true;
  });

  // ÌöåÍ≥†Î°ù Î™®Îã¨ Ïó¥Í∏∞
  const openRetrospectiveModal = (project) => {
    setSelectedProject(project);
    setModalOpen(true);
  };

  // ÌöåÍ≥†Î°ù Î™®Îã¨ Îã´Í∏∞
  const closeRetrospectiveModal = () => {
    setModalOpen(false);
    setSelectedProject(null);
  };

  return (
    <article ref={ref} id="Project" className="pt-20">
      <h2 className="text-4xl font-bold text-white mb-8">Projects</h2>
      
      {/* Filter Buttons */}
      <div className="w-fit flex gap-2 items-center justify-center rounded-full px-4 py-3 bg-gray-200 max-sm:w-full mb-12">
        {[
          { key: 'all', label: 'All' },
          { key: 'team', label: 'Team' },
          { key: 'personal', label: 'Personal' }
        ].map((filter) => (
          <button
            key={filter.key}
            onClick={() => setProjectFilter(filter.key)}
            className={`rounded-full px-5 py-2 transition max-sm:w-full max-sm:text-xs font-bold ${
              projectFilter === filter.key
                ? 'bg-gray-800 text-white'
                : 'text-gray-900 bg-transparent hover:bg-gray-300'
            }`}
          >
            {filter.label}
          </button>
        ))}
      </div>

      {/* Project Grid */}
      <section className="grid grid-cols-2 gap-4 pt-12 max-lg:grid-cols-1 max-xl:grid-cols-2 max-2xl:grid-cols-2">
        {filteredProjects.map((project, index) => (
          <section key={index} className="overflow-hidden flex flex-col justify-start gap-8 rounded bg-gray-200 relative h-[25rem] group transition-all hover:shadow-black hover:shadow-2xl hover:translate-y-[-5px]">
            {/* Hover Overlay */}
            <div className="absolute z-30 flex flex-col items-center justify-center gap-3 text-white w-full h-full p-4 bg-gray-800 bg-opacity-95 opacity-0 transition-all duration-300 group-hover:opacity-100">
              <h4 className="font-bold text-lg text-center mb-1">{project.title}</h4>
              
              {/* My Role Section */}
              <div className="w-full flex-1 max-h-48 overflow-y-auto">
                <h5 className="font-semibold text-sm mb-2 text-blue-300">üîß Îã¥Îãπ Ïó≠Ìï†</h5>
                <ul className="text-xs space-y-1">
                  {project.myRole.map((role, roleIndex) => (
                    <li key={roleIndex} className="pl-2 relative before:absolute before:w-1 before:h-1 before:bg-blue-300 before:block before:rounded-full before:left-0 before:top-2">
                      {role}
                    </li>
                  ))}
                </ul>
              </div>

              {/* Action Buttons */}
              <div className="w-full flex gap-2 mt-2">
                <a 
                  href={project.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flex-1 p-2 border border-white text-white rounded text-center text-xs transition hover:bg-white hover:text-gray-900 flex items-center justify-center gap-1"
                >
                  <span>üîó</span>
                  GitHub
                </a>
                
                <button
                  onClick={() => openRetrospectiveModal(project)}
                  className="flex-1 p-2 bg-purple-600 text-white rounded text-center text-xs transition hover:bg-purple-700 flex items-center justify-center gap-1"
                >
                  <span>üìù</span>
                  ÌöåÍ≥†Î°ù
                </button>
              </div>
            </div>

            {/* Project Image */}
            {project.image ? (
              <div className="overflow-hidden w-full h-[50%]">
                <img src={project.image} alt="thumbnail" className="object-contain w-full h-full transition-transform duration-300 group-hover:scale-110" />
              </div>
            ) : (
              <div className="w-full h-[45%] bg-gradient-to-br from-blue-100 to-purple-100 flex items-center justify-center text-4xl transition-transform duration-300 group-hover:scale-110">
                üíª
              </div>
            )}

            {/* Project Info */}
            <div className="px-5 flex flex-col justify-start gap-3 text-gray-900">
              <h4 className="font-bold text-xl">{project.title}</h4>
              <p className="text-base text-gray-600">{project.description}</p>
            </div>

            {/* Tags */}
            <div className="absolute bottom-0 p-5 flex gap-1 flex-wrap">
              {project.tags.map((tag, tagIndex) => (
                <span key={tagIndex} className="flex items-center justify-center text-xs text-white bg-gray-800 px-3 py-1 rounded">
                  {tag}
                </span>
              ))}
            </div>
          </section>
        ))}
      </section>

      {/* Retrospective Modal */}
      <ProjectRetrospectiveModal 
        isOpen={modalOpen}
        onClose={closeRetrospectiveModal}
        project={selectedProject}
      />
    </article>
  );
});

ProjectSection.displayName = 'ProjectSection';

export default ProjectSection;